# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

name: $(SourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)

trigger: [master, develop]

variables:
  # Azure Resource Manager connection created during pipeline creation
  - group: archg
  - name: azureSubscription
    value: 'df6cb254-c8ee-472f-853a-dfaae5783270'
  # Agent VM image name
  - name: vmImageName
    value: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
            displayName: 'npm install'

          - script: |
              npm run build:frontend:prod
            displayName: 'npm build frontend'

          - script: |
              npm run build:backend:prod
            displayName: 'npm build backend'

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop

  - stage: deployTest
    displayName: Deploy to Test
    jobs:
      - job: Deploy
        displayName: Deploy
        pool:
          vmImage: ubuntu-20.04
        variables:
          webAppName: archg-prepared
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              targetPath: '$(System.DefaultWorkingDirectory)'
          - task: AzureAppServiceManage@0
            displayName: 'Stop Azure App Service: $(webAppName)'
            enabled: False
            inputs:
              azureSubscription: 'Visual Studio Enterprise-Abonnement – MPN (cdf35a02-89ca-450a-bcf0-f03f9302b1d0)'
              Action: Stop Azure App Service
              WebAppName: $(webAppName)
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: $(webAppName)'
            inputs:
              azureSubscription: 'Visual Studio Enterprise-Abonnement – MPN (cdf35a02-89ca-450a-bcf0-f03f9302b1d0)'
              WebAppKind: webAppLinux
              WebAppName: $(webAppName)
              RuntimeStack: NODE|14-lts
              StartupCommand: npm start
              AppSettings: -port $(WebAppDefaultPort) -MONGO_CONNECTION $(MongoConnection)
          - task: AzureAppServiceManage@0
            displayName: 'Start Azure App Service: $(webAppName)'
            enabled: False
            inputs:
              azureSubscription: 'Visual Studio Enterprise-Abonnement – MPN (cdf35a02-89ca-450a-bcf0-f03f9302b1d0)'
              Action: Start Azure App Service
              WebAppName: $(webAppName)

  - stage: deployProd
    displayName: Deploy to Prod
    jobs:
      - job: Deploy
        displayName: Deploy
        pool:
          vmImage: ubuntu-20.04
        variables:
          webAppName: archg-prepared-prod
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              targetPath: '$(System.DefaultWorkingDirectory)'
          - task: AzureAppServiceManage@0
            displayName: 'Stop Azure App Service: $(webAppName)'
            enabled: False
            inputs:
              azureSubscription: 'Visual Studio Enterprise-Abonnement – MPN (cdf35a02-89ca-450a-bcf0-f03f9302b1d0)'
              Action: Stop Azure App Service
              WebAppName: $(webAppName)
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: $(webAppName)'
            inputs:
              azureSubscription: 'Visual Studio Enterprise-Abonnement – MPN (cdf35a02-89ca-450a-bcf0-f03f9302b1d0)'
              WebAppKind: webAppLinux
              WebAppName: $(webAppName)
              RuntimeStack: NODE|14-lts
              StartupCommand: npm start
              AppSettings: -port $(WebAppDefaultPort) -MONGO_CONNECTION $(MongoConnection)
          - task: AzureAppServiceManage@0
            displayName: 'Start Azure App Service: $(webAppName)'
            enabled: False
            inputs:
              azureSubscription: 'Visual Studio Enterprise-Abonnement – MPN (cdf35a02-89ca-450a-bcf0-f03f9302b1d0)'
              Action: Start Azure App Service
              WebAppName: $(webAppName)
