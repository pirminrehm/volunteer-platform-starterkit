# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

name: $(SourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)

trigger: [master, develop]

variables:
  # Azure Resource Manager connection created during pipeline creation
  - group: archg
  - name: azureSubscription
    value: 'df6cb254-c8ee-472f-853a-dfaae5783270'
  # Agent VM image name
  - name: vmImageName
    value: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
      displayName: 'npm install'

    - script: |
        npm run build:frontend:prod
      displayName: 'npm build frontend'

    - script: |
        npm run build:backend:prod
      displayName: 'npm build backend'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

stages:
- stage: deploy
  displayName: deploy to test
  jobs:
  - job: Job_1
    displayName: Agent job 1
    pool:
      vmImage: ubuntu-20.04
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download Pipeline Artifact
      inputs:
        source: specific
        project: 31e75793-33d8-42b9-aa6f-a27ee3e07838
        pipeline: 7
        preferTriggeringPipeline: true
        artifact: drop
        path: $(System.DefaultWorkingDirectory)
    - task: AzureAppServiceManage@0
      displayName: 'Stop Azure App Service: archg-test12'
      enabled: False
      inputs:
        ConnectedServiceName: c80324fe-7ac1-4722-8e5c-38faa4f3f1dd
        Action: Stop Azure App Service
        WebAppName: archg-test12
    - task: AzureRmWebAppDeployment@4
      displayName: 'Azure App Service Deploy: archg-test121'
      inputs:
        ConnectedServiceName: c80324fe-7ac1-4722-8e5c-38faa4f3f1dd
        WebAppKind: webAppLinux
        WebAppName: archg-test121
        RuntimeStack: NODE|14-lts
        StartupCommand: npm start
        AppSettings: -port $(WebAppDefaultPort) -MONGO_CONNECTION $(MongoConnection)
    - task: AzureAppServiceManage@0
      displayName: 'Start Azure App Service: archg-test12'
      enabled: False
      inputs:
        ConnectedServiceName: c80324fe-7ac1-4722-8e5c-38faa4f3f1dd
        Action: Start Azure App Service
        WebAppName: archg-test12
  ...